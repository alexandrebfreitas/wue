package com.alexandrebfreitas.wue.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OnsDadosHidrologicosVolumeEsperaRecomendadoEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosHidrologicosVolumeEsperaRecomendadoEntityAllPropertiesEquals(
        OnsDadosHidrologicosVolumeEsperaRecomendadoEntity expected,
        OnsDadosHidrologicosVolumeEsperaRecomendadoEntity actual
    ) {
        assertOnsDadosHidrologicosVolumeEsperaRecomendadoEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertOnsDadosHidrologicosVolumeEsperaRecomendadoEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosHidrologicosVolumeEsperaRecomendadoEntityAllUpdatablePropertiesEquals(
        OnsDadosHidrologicosVolumeEsperaRecomendadoEntity expected,
        OnsDadosHidrologicosVolumeEsperaRecomendadoEntity actual
    ) {
        assertOnsDadosHidrologicosVolumeEsperaRecomendadoEntityUpdatableFieldsEquals(expected, actual);
        assertOnsDadosHidrologicosVolumeEsperaRecomendadoEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosHidrologicosVolumeEsperaRecomendadoEntityAutoGeneratedPropertiesEquals(
        OnsDadosHidrologicosVolumeEsperaRecomendadoEntity expected,
        OnsDadosHidrologicosVolumeEsperaRecomendadoEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsDadosHidrologicosVolumeEsperaRecomendadoEntity auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosHidrologicosVolumeEsperaRecomendadoEntityUpdatableFieldsEquals(
        OnsDadosHidrologicosVolumeEsperaRecomendadoEntity expected,
        OnsDadosHidrologicosVolumeEsperaRecomendadoEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsDadosHidrologicosVolumeEsperaRecomendadoEntity relevant properties")
            .satisfies(a -> assertThat(a.getDinInstante()).as("check dinInstante").isEqualTo(expected.getDinInstante()))
            .satisfies(a -> assertThat(a.getValVolumeespera()).as("check valVolumeespera").isEqualTo(expected.getValVolumeespera()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosHidrologicosVolumeEsperaRecomendadoEntityUpdatableRelationshipsEquals(
        OnsDadosHidrologicosVolumeEsperaRecomendadoEntity expected,
        OnsDadosHidrologicosVolumeEsperaRecomendadoEntity actual
    ) {
        // empty method
    }
}
