package com.alexandrebfreitas.wue.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OnsEarDiarioBaciaEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsEarDiarioBaciaEntityAllPropertiesEquals(OnsEarDiarioBaciaEntity expected, OnsEarDiarioBaciaEntity actual) {
        assertOnsEarDiarioBaciaEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertOnsEarDiarioBaciaEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsEarDiarioBaciaEntityAllUpdatablePropertiesEquals(
        OnsEarDiarioBaciaEntity expected,
        OnsEarDiarioBaciaEntity actual
    ) {
        assertOnsEarDiarioBaciaEntityUpdatableFieldsEquals(expected, actual);
        assertOnsEarDiarioBaciaEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsEarDiarioBaciaEntityAutoGeneratedPropertiesEquals(
        OnsEarDiarioBaciaEntity expected,
        OnsEarDiarioBaciaEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsEarDiarioBaciaEntity auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsEarDiarioBaciaEntityUpdatableFieldsEquals(
        OnsEarDiarioBaciaEntity expected,
        OnsEarDiarioBaciaEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsEarDiarioBaciaEntity relevant properties")
            .satisfies(a -> assertThat(a.getNomCurto()).as("check nomCurto").isEqualTo(expected.getNomCurto()))
            .satisfies(a -> assertThat(a.getEarData()).as("check earData").isEqualTo(expected.getEarData()))
            .satisfies(a -> assertThat(a.getEarMaxBacia()).as("check earMaxBacia").isEqualTo(expected.getEarMaxBacia()))
            .satisfies(a -> assertThat(a.getEarVerifBaciaMwmes()).as("check earVerifBaciaMwmes").isEqualTo(expected.getEarVerifBaciaMwmes())
            )
            .satisfies(a ->
                assertThat(a.getEarVerifBaciaPercentual())
                    .as("check earVerifBaciaPercentual")
                    .isEqualTo(expected.getEarVerifBaciaPercentual())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsEarDiarioBaciaEntityUpdatableRelationshipsEquals(
        OnsEarDiarioBaciaEntity expected,
        OnsEarDiarioBaciaEntity actual
    ) {
        // empty method
    }
}
