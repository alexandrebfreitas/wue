package com.alexandrebfreitas.wue.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OnsDadosGrandezasFluviometricasEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosGrandezasFluviometricasEntityAllPropertiesEquals(
        OnsDadosGrandezasFluviometricasEntity expected,
        OnsDadosGrandezasFluviometricasEntity actual
    ) {
        assertOnsDadosGrandezasFluviometricasEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertOnsDadosGrandezasFluviometricasEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosGrandezasFluviometricasEntityAllUpdatablePropertiesEquals(
        OnsDadosGrandezasFluviometricasEntity expected,
        OnsDadosGrandezasFluviometricasEntity actual
    ) {
        assertOnsDadosGrandezasFluviometricasEntityUpdatableFieldsEquals(expected, actual);
        assertOnsDadosGrandezasFluviometricasEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosGrandezasFluviometricasEntityAutoGeneratedPropertiesEquals(
        OnsDadosGrandezasFluviometricasEntity expected,
        OnsDadosGrandezasFluviometricasEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsDadosGrandezasFluviometricasEntity auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosGrandezasFluviometricasEntityUpdatableFieldsEquals(
        OnsDadosGrandezasFluviometricasEntity expected,
        OnsDadosGrandezasFluviometricasEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsDadosGrandezasFluviometricasEntity relevant properties")
            .satisfies(a -> assertThat(a.getIdPostofluv()).as("check idPostofluv").isEqualTo(expected.getIdPostofluv()))
            .satisfies(a ->
                assertThat(a.getNomPostofluviometrico()).as("check nomPostofluviometrico").isEqualTo(expected.getNomPostofluviometrico())
            )
            .satisfies(a -> assertThat(a.getValLatitude()).as("check valLatitude").isEqualTo(expected.getValLatitude()))
            .satisfies(a -> assertThat(a.getValLongitude()).as("check valLongitude").isEqualTo(expected.getValLongitude()))
            .satisfies(a -> assertThat(a.getNomRio()).as("check nomRio").isEqualTo(expected.getNomRio()))
            .satisfies(a -> assertThat(a.getNomBacia()).as("check nomBacia").isEqualTo(expected.getNomBacia()))
            .satisfies(a -> assertThat(a.getDinMedicao()).as("check dinMedicao").isEqualTo(expected.getDinMedicao()))
            .satisfies(a -> assertThat(a.getValVazaomedia()).as("check valVazaomedia").isEqualTo(expected.getValVazaomedia()))
            .satisfies(a -> assertThat(a.getValVazaomediaincr()).as("check valVazaomediaincr").isEqualTo(expected.getValVazaomediaincr()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosGrandezasFluviometricasEntityUpdatableRelationshipsEquals(
        OnsDadosGrandezasFluviometricasEntity expected,
        OnsDadosGrandezasFluviometricasEntity actual
    ) {
        // empty method
    }
}
