package com.alexandrebfreitas.wue.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OnsReservatoriosEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsReservatoriosEntityAllPropertiesEquals(OnsReservatoriosEntity expected, OnsReservatoriosEntity actual) {
        assertOnsReservatoriosEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertOnsReservatoriosEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsReservatoriosEntityAllUpdatablePropertiesEquals(
        OnsReservatoriosEntity expected,
        OnsReservatoriosEntity actual
    ) {
        assertOnsReservatoriosEntityUpdatableFieldsEquals(expected, actual);
        assertOnsReservatoriosEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsReservatoriosEntityAutoGeneratedPropertiesEquals(
        OnsReservatoriosEntity expected,
        OnsReservatoriosEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsReservatoriosEntity auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsReservatoriosEntityUpdatableFieldsEquals(OnsReservatoriosEntity expected, OnsReservatoriosEntity actual) {
        assertThat(actual)
            .as("Verify OnsReservatoriosEntity relevant properties")
            .satisfies(a -> assertThat(a.getNomRee()).as("check nomRee").isEqualTo(expected.getNomRee()))
            .satisfies(a -> assertThat(a.getDatEntrada()).as("check datEntrada").isEqualTo(expected.getDatEntrada()))
            .satisfies(a -> assertThat(a.getValCotamaxima()).as("check valCotamaxima").isEqualTo(expected.getValCotamaxima()))
            .satisfies(a -> assertThat(a.getValCotaminima()).as("check valCotaminima").isEqualTo(expected.getValCotaminima()))
            .satisfies(a -> assertThat(a.getValVolmax()).as("check valVolmax").isEqualTo(expected.getValVolmax()))
            .satisfies(a -> assertThat(a.getValVolmin()).as("check valVolmin").isEqualTo(expected.getValVolmin()))
            .satisfies(a -> assertThat(a.getValVolutiltot()).as("check valVolutiltot").isEqualTo(expected.getValVolutiltot()))
            .satisfies(a ->
                assertThat(a.getValProdutibilidadeespecifica())
                    .as("check valProdutibilidadeespecifica")
                    .isEqualTo(expected.getValProdutibilidadeespecifica())
            )
            .satisfies(a ->
                assertThat(a.getValProdutividade65volutil())
                    .as("check valProdutividade65volutil")
                    .isEqualTo(expected.getValProdutividade65volutil())
            )
            .satisfies(a -> assertThat(a.getValTipoperda()).as("check valTipoperda").isEqualTo(expected.getValTipoperda()))
            .satisfies(a -> assertThat(a.getValPerda()).as("check valPerda").isEqualTo(expected.getValPerda()))
            .satisfies(a -> assertThat(a.getValLatitude()).as("check valLatitude").isEqualTo(expected.getValLatitude()))
            .satisfies(a -> assertThat(a.getValLongitude()).as("check valLongitude").isEqualTo(expected.getValLongitude()))
            .satisfies(a -> assertThat(a.getIdReservatorio()).as("check idReservatorio").isEqualTo(expected.getIdReservatorio()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsReservatoriosEntityUpdatableRelationshipsEquals(
        OnsReservatoriosEntity expected,
        OnsReservatoriosEntity actual
    ) {
        // empty method
    }
}
