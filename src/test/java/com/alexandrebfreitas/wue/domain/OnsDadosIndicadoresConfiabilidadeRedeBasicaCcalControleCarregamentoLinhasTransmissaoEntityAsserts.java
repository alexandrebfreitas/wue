package com.alexandrebfreitas.wue.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OnsDadosIndicadoresConfiabilidadeRedeBasicaCcalControleCarregamentoLinhasTransmissaoEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosIndicadoresConfiabilidadeRedeBasicaCcalControleCarregamentoLinhasTransmissaoEntityAllPropertiesEquals(
        OnsDadosIndicadoresConfiabilidadeRedeBasicaCcalControleCarregamentoLinhasTransmissaoEntity expected,
        OnsDadosIndicadoresConfiabilidadeRedeBasicaCcalControleCarregamentoLinhasTransmissaoEntity actual
    ) {
        assertOnsDadosIndicadoresConfiabilidadeRedeBasicaCcalControleCarregamentoLinhasTransmissaoEntityAutoGeneratedPropertiesEquals(
            expected,
            actual
        );
        assertOnsDadosIndicadoresConfiabilidadeRedeBasicaCcalControleCarregamentoLinhasTransmissaoEntityAllUpdatablePropertiesEquals(
            expected,
            actual
        );
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosIndicadoresConfiabilidadeRedeBasicaCcalControleCarregamentoLinhasTransmissaoEntityAllUpdatablePropertiesEquals(
        OnsDadosIndicadoresConfiabilidadeRedeBasicaCcalControleCarregamentoLinhasTransmissaoEntity expected,
        OnsDadosIndicadoresConfiabilidadeRedeBasicaCcalControleCarregamentoLinhasTransmissaoEntity actual
    ) {
        assertOnsDadosIndicadoresConfiabilidadeRedeBasicaCcalControleCarregamentoLinhasTransmissaoEntityUpdatableFieldsEquals(
            expected,
            actual
        );
        assertOnsDadosIndicadoresConfiabilidadeRedeBasicaCcalControleCarregamentoLinhasTransmissaoEntityUpdatableRelationshipsEquals(
            expected,
            actual
        );
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosIndicadoresConfiabilidadeRedeBasicaCcalControleCarregamentoLinhasTransmissaoEntityAutoGeneratedPropertiesEquals(
        OnsDadosIndicadoresConfiabilidadeRedeBasicaCcalControleCarregamentoLinhasTransmissaoEntity expected,
        OnsDadosIndicadoresConfiabilidadeRedeBasicaCcalControleCarregamentoLinhasTransmissaoEntity actual
    ) {
        assertThat(actual)
            .as(
                "Verify OnsDadosIndicadoresConfiabilidadeRedeBasicaCcalControleCarregamentoLinhasTransmissaoEntity auto generated properties"
            )
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosIndicadoresConfiabilidadeRedeBasicaCcalControleCarregamentoLinhasTransmissaoEntityUpdatableFieldsEquals(
        OnsDadosIndicadoresConfiabilidadeRedeBasicaCcalControleCarregamentoLinhasTransmissaoEntity expected,
        OnsDadosIndicadoresConfiabilidadeRedeBasicaCcalControleCarregamentoLinhasTransmissaoEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsDadosIndicadoresConfiabilidadeRedeBasicaCcalControleCarregamentoLinhasTransmissaoEntity relevant properties")
            .satisfies(a -> assertThat(a.getCodTipoagregacao()).as("check codTipoagregacao").isEqualTo(expected.getCodTipoagregacao()))
            .satisfies(a -> assertThat(a.getIdPeriodicidade()).as("check idPeriodicidade").isEqualTo(expected.getIdPeriodicidade()))
            .satisfies(a -> assertThat(a.getNomAgregacao()).as("check nomAgregacao").isEqualTo(expected.getNomAgregacao()))
            .satisfies(a -> assertThat(a.getDinReferencia()).as("check dinReferencia").isEqualTo(expected.getDinReferencia()))
            .satisfies(a -> assertThat(a.getNumLinhasoperacao()).as("check numLinhasoperacao").isEqualTo(expected.getNumLinhasoperacao()))
            .satisfies(a -> assertThat(a.getNumLinhasvioladas()).as("check numLinhasvioladas").isEqualTo(expected.getNumLinhasvioladas()))
            .satisfies(a -> assertThat(a.getValCcal()).as("check valCcal").isEqualTo(expected.getValCcal()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosIndicadoresConfiabilidadeRedeBasicaCcalControleCarregamentoLinhasTransmissaoEntityUpdatableRelationshipsEquals(
        OnsDadosIndicadoresConfiabilidadeRedeBasicaCcalControleCarregamentoLinhasTransmissaoEntity expected,
        OnsDadosIndicadoresConfiabilidadeRedeBasicaCcalControleCarregamentoLinhasTransmissaoEntity actual
    ) {
        // empty method
    }
}
