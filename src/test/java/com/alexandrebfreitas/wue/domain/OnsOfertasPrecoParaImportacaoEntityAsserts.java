package com.alexandrebfreitas.wue.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OnsOfertasPrecoParaImportacaoEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsOfertasPrecoParaImportacaoEntityAllPropertiesEquals(
        OnsOfertasPrecoParaImportacaoEntity expected,
        OnsOfertasPrecoParaImportacaoEntity actual
    ) {
        assertOnsOfertasPrecoParaImportacaoEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertOnsOfertasPrecoParaImportacaoEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsOfertasPrecoParaImportacaoEntityAllUpdatablePropertiesEquals(
        OnsOfertasPrecoParaImportacaoEntity expected,
        OnsOfertasPrecoParaImportacaoEntity actual
    ) {
        assertOnsOfertasPrecoParaImportacaoEntityUpdatableFieldsEquals(expected, actual);
        assertOnsOfertasPrecoParaImportacaoEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsOfertasPrecoParaImportacaoEntityAutoGeneratedPropertiesEquals(
        OnsOfertasPrecoParaImportacaoEntity expected,
        OnsOfertasPrecoParaImportacaoEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsOfertasPrecoParaImportacaoEntity auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsOfertasPrecoParaImportacaoEntityUpdatableFieldsEquals(
        OnsOfertasPrecoParaImportacaoEntity expected,
        OnsOfertasPrecoParaImportacaoEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsOfertasPrecoParaImportacaoEntity relevant properties")
            .satisfies(a -> assertThat(a.getNomPais()).as("check nomPais").isEqualTo(expected.getNomPais()))
            .satisfies(a -> assertThat(a.getNomAgente()).as("check nomAgente").isEqualTo(expected.getNomAgente()))
            .satisfies(a -> assertThat(a.getNomBloco()).as("check nomBloco").isEqualTo(expected.getNomBloco()))
            .satisfies(a -> assertThat(a.getDatIniciovalidade()).as("check datIniciovalidade").isEqualTo(expected.getDatIniciovalidade()))
            .satisfies(a -> assertThat(a.getDatFimvalidade()).as("check datFimvalidade").isEqualTo(expected.getDatFimvalidade()))
            .satisfies(a -> assertThat(a.getValPreco()).as("check valPreco").isEqualTo(expected.getValPreco()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsOfertasPrecoParaImportacaoEntityUpdatableRelationshipsEquals(
        OnsOfertasPrecoParaImportacaoEntity expected,
        OnsOfertasPrecoParaImportacaoEntity actual
    ) {
        // empty method
    }
}
