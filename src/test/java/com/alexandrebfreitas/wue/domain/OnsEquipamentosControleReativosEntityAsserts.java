package com.alexandrebfreitas.wue.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OnsEquipamentosControleReativosEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsEquipamentosControleReativosEntityAllPropertiesEquals(
        OnsEquipamentosControleReativosEntity expected,
        OnsEquipamentosControleReativosEntity actual
    ) {
        assertOnsEquipamentosControleReativosEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertOnsEquipamentosControleReativosEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsEquipamentosControleReativosEntityAllUpdatablePropertiesEquals(
        OnsEquipamentosControleReativosEntity expected,
        OnsEquipamentosControleReativosEntity actual
    ) {
        assertOnsEquipamentosControleReativosEntityUpdatableFieldsEquals(expected, actual);
        assertOnsEquipamentosControleReativosEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsEquipamentosControleReativosEntityAutoGeneratedPropertiesEquals(
        OnsEquipamentosControleReativosEntity expected,
        OnsEquipamentosControleReativosEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsEquipamentosControleReativosEntity auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsEquipamentosControleReativosEntityUpdatableFieldsEquals(
        OnsEquipamentosControleReativosEntity expected,
        OnsEquipamentosControleReativosEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsEquipamentosControleReativosEntity relevant properties")
            .satisfies(a -> assertThat(a.getIdSubsistema()).as("check idSubsistema").isEqualTo(expected.getIdSubsistema()))
            .satisfies(a -> assertThat(a.getNomSubsistema()).as("check nomSubsistema").isEqualTo(expected.getNomSubsistema()))
            .satisfies(a -> assertThat(a.getIdEstado()).as("check idEstado").isEqualTo(expected.getIdEstado()))
            .satisfies(a -> assertThat(a.getNomEstado()).as("check nomEstado").isEqualTo(expected.getNomEstado()))
            .satisfies(a -> assertThat(a.getNomSubestacao()).as("check nomSubestacao").isEqualTo(expected.getNomSubestacao()))
            .satisfies(a ->
                assertThat(a.getNomAgenteProprietario()).as("check nomAgenteProprietario").isEqualTo(expected.getNomAgenteProprietario())
            )
            .satisfies(a -> assertThat(a.getNomTipoderede()).as("check nomTipoderede").isEqualTo(expected.getNomTipoderede()))
            .satisfies(a -> assertThat(a.getNomTipoequipamento()).as("check nomTipoequipamento").isEqualTo(expected.getNomTipoequipamento())
            )
            .satisfies(a -> assertThat(a.getNomEquipamento()).as("check nomEquipamento").isEqualTo(expected.getNomEquipamento()))
            .satisfies(a ->
                assertThat(a.getValPotreativanominalMvar())
                    .as("check valPotreativanominalMvar")
                    .isEqualTo(expected.getValPotreativanominalMvar())
            )
            .satisfies(a ->
                assertThat(a.getValLimiteinferiorMvar()).as("check valLimiteinferiorMvar").isEqualTo(expected.getValLimiteinferiorMvar())
            )
            .satisfies(a ->
                assertThat(a.getValLimitesuperiorMvar()).as("check valLimitesuperiorMvar").isEqualTo(expected.getValLimitesuperiorMvar())
            )
            .satisfies(a -> assertThat(a.getDatEntradaoperacao()).as("check datEntradaoperacao").isEqualTo(expected.getDatEntradaoperacao())
            )
            .satisfies(a -> assertThat(a.getDatDesativacao()).as("check datDesativacao").isEqualTo(expected.getDatDesativacao()))
            .satisfies(a -> assertThat(a.getCodEquipamento()).as("check codEquipamento").isEqualTo(expected.getCodEquipamento()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsEquipamentosControleReativosEntityUpdatableRelationshipsEquals(
        OnsEquipamentosControleReativosEntity expected,
        OnsEquipamentosControleReativosEntity actual
    ) {
        // empty method
    }
}
