package com.alexandrebfreitas.wue.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OnsIndicadoresConfiabilidadeRedeBasicaDreqFreqEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsIndicadoresConfiabilidadeRedeBasicaDreqFreqEntityAllPropertiesEquals(
        OnsIndicadoresConfiabilidadeRedeBasicaDreqFreqEntity expected,
        OnsIndicadoresConfiabilidadeRedeBasicaDreqFreqEntity actual
    ) {
        assertOnsIndicadoresConfiabilidadeRedeBasicaDreqFreqEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertOnsIndicadoresConfiabilidadeRedeBasicaDreqFreqEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsIndicadoresConfiabilidadeRedeBasicaDreqFreqEntityAllUpdatablePropertiesEquals(
        OnsIndicadoresConfiabilidadeRedeBasicaDreqFreqEntity expected,
        OnsIndicadoresConfiabilidadeRedeBasicaDreqFreqEntity actual
    ) {
        assertOnsIndicadoresConfiabilidadeRedeBasicaDreqFreqEntityUpdatableFieldsEquals(expected, actual);
        assertOnsIndicadoresConfiabilidadeRedeBasicaDreqFreqEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsIndicadoresConfiabilidadeRedeBasicaDreqFreqEntityAutoGeneratedPropertiesEquals(
        OnsIndicadoresConfiabilidadeRedeBasicaDreqFreqEntity expected,
        OnsIndicadoresConfiabilidadeRedeBasicaDreqFreqEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsIndicadoresConfiabilidadeRedeBasicaDreqFreqEntity auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsIndicadoresConfiabilidadeRedeBasicaDreqFreqEntityUpdatableFieldsEquals(
        OnsIndicadoresConfiabilidadeRedeBasicaDreqFreqEntity expected,
        OnsIndicadoresConfiabilidadeRedeBasicaDreqFreqEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsIndicadoresConfiabilidadeRedeBasicaDreqFreqEntity relevant properties")
            .satisfies(a -> assertThat(a.getDscAgregacao()).as("check dscAgregacao").isEqualTo(expected.getDscAgregacao()))
            .satisfies(a -> assertThat(a.getCodCaracteristica()).as("check codCaracteristica").isEqualTo(expected.getCodCaracteristica()))
            .satisfies(a -> assertThat(a.getDscCaracteristica()).as("check dscCaracteristica").isEqualTo(expected.getDscCaracteristica()))
            .satisfies(a -> assertThat(a.getIdPeriodicidade()).as("check idPeriodicidade").isEqualTo(expected.getIdPeriodicidade()))
            .satisfies(a -> assertThat(a.getDinReferencia()).as("check dinReferencia").isEqualTo(expected.getDinReferencia()))
            .satisfies(a -> assertThat(a.getValDreq()).as("check valDreq").isEqualTo(expected.getValDreq()))
            .satisfies(a -> assertThat(a.getValFreq()).as("check valFreq").isEqualTo(expected.getValFreq()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsIndicadoresConfiabilidadeRedeBasicaDreqFreqEntityUpdatableRelationshipsEquals(
        OnsIndicadoresConfiabilidadeRedeBasicaDreqFreqEntity expected,
        OnsIndicadoresConfiabilidadeRedeBasicaDreqFreqEntity actual
    ) {
        // empty method
    }
}
