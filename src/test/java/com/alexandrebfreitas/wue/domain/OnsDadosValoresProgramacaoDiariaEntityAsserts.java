package com.alexandrebfreitas.wue.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OnsDadosValoresProgramacaoDiariaEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosValoresProgramacaoDiariaEntityAllPropertiesEquals(
        OnsDadosValoresProgramacaoDiariaEntity expected,
        OnsDadosValoresProgramacaoDiariaEntity actual
    ) {
        assertOnsDadosValoresProgramacaoDiariaEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertOnsDadosValoresProgramacaoDiariaEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosValoresProgramacaoDiariaEntityAllUpdatablePropertiesEquals(
        OnsDadosValoresProgramacaoDiariaEntity expected,
        OnsDadosValoresProgramacaoDiariaEntity actual
    ) {
        assertOnsDadosValoresProgramacaoDiariaEntityUpdatableFieldsEquals(expected, actual);
        assertOnsDadosValoresProgramacaoDiariaEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosValoresProgramacaoDiariaEntityAutoGeneratedPropertiesEquals(
        OnsDadosValoresProgramacaoDiariaEntity expected,
        OnsDadosValoresProgramacaoDiariaEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsDadosValoresProgramacaoDiariaEntity auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosValoresProgramacaoDiariaEntityUpdatableFieldsEquals(
        OnsDadosValoresProgramacaoDiariaEntity expected,
        OnsDadosValoresProgramacaoDiariaEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsDadosValoresProgramacaoDiariaEntity relevant properties")
            .satisfies(a -> assertThat(a.getDinProgramacaodia()).as("check dinProgramacaodia").isEqualTo(expected.getDinProgramacaodia()))
            .satisfies(a -> assertThat(a.getNumPatamar()).as("check numPatamar").isEqualTo(expected.getNumPatamar()))
            .satisfies(a -> assertThat(a.getCodExibicaousina()).as("check codExibicaousina").isEqualTo(expected.getCodExibicaousina()))
            .satisfies(a -> assertThat(a.getNomUsina()).as("check nomUsina").isEqualTo(expected.getNomUsina()))
            .satisfies(a -> assertThat(a.getTipGeracao()).as("check tipGeracao").isEqualTo(expected.getTipGeracao()))
            .satisfies(a ->
                assertThat(a.getNomModalidadeoperacao()).as("check nomModalidadeoperacao").isEqualTo(expected.getNomModalidadeoperacao())
            )
            .satisfies(a -> assertThat(a.getIdSubsistema()).as("check idSubsistema").isEqualTo(expected.getIdSubsistema()))
            .satisfies(a -> assertThat(a.getNomSubsistema()).as("check nomSubsistema").isEqualTo(expected.getNomSubsistema()))
            .satisfies(a -> assertThat(a.getIdEstado()).as("check idEstado").isEqualTo(expected.getIdEstado()))
            .satisfies(a -> assertThat(a.getNomEstado()).as("check nomEstado").isEqualTo(expected.getNomEstado()))
            .satisfies(a ->
                assertThat(a.getValGeracaoprogramada()).as("check valGeracaoprogramada").isEqualTo(expected.getValGeracaoprogramada())
            )
            .satisfies(a -> assertThat(a.getValDisponibilidade()).as("check valDisponibilidade").isEqualTo(expected.getValDisponibilidade())
            )
            .satisfies(a -> assertThat(a.getValOrdemmerito()).as("check valOrdemmerito").isEqualTo(expected.getValOrdemmerito()))
            .satisfies(a -> assertThat(a.getValInflexibilidade()).as("check valInflexibilidade").isEqualTo(expected.getValInflexibilidade())
            )
            .satisfies(a -> assertThat(a.getValUc()).as("check valUc").isEqualTo(expected.getValUc()))
            .satisfies(a -> assertThat(a.getValRazaoeletrica()).as("check valRazaoeletrica").isEqualTo(expected.getValRazaoeletrica()))
            .satisfies(a ->
                assertThat(a.getValGeracaoenergetica()).as("check valGeracaoenergetica").isEqualTo(expected.getValGeracaoenergetica())
            )
            .satisfies(a -> assertThat(a.getValGesubgsub()).as("check valGesubgsub").isEqualTo(expected.getValGesubgsub()))
            .satisfies(a -> assertThat(a.getValExportacao()).as("check valExportacao").isEqualTo(expected.getValExportacao()))
            .satisfies(a ->
                assertThat(a.getValReposicaoexportacao()).as("check valReposicaoexportacao").isEqualTo(expected.getValReposicaoexportacao())
            )
            .satisfies(a ->
                assertThat(a.getValFaltacombustivel()).as("check valFaltacombustivel").isEqualTo(expected.getValFaltacombustivel())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosValoresProgramacaoDiariaEntityUpdatableRelationshipsEquals(
        OnsDadosValoresProgramacaoDiariaEntity expected,
        OnsDadosValoresProgramacaoDiariaEntity actual
    ) {
        // empty method
    }
}
