package com.alexandrebfreitas.wue.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OnsIndicadoresDesempenhoFuncoesGeracaoUnidadeGeradoraEmBaseMensalEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsIndicadoresDesempenhoFuncoesGeracaoUnidadeGeradoraEmBaseMensalEntityAllPropertiesEquals(
        OnsIndicadoresDesempenhoFuncoesGeracaoUnidadeGeradoraEmBaseMensalEntity expected,
        OnsIndicadoresDesempenhoFuncoesGeracaoUnidadeGeradoraEmBaseMensalEntity actual
    ) {
        assertOnsIndicadoresDesempenhoFuncoesGeracaoUnidadeGeradoraEmBaseMensalEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertOnsIndicadoresDesempenhoFuncoesGeracaoUnidadeGeradoraEmBaseMensalEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsIndicadoresDesempenhoFuncoesGeracaoUnidadeGeradoraEmBaseMensalEntityAllUpdatablePropertiesEquals(
        OnsIndicadoresDesempenhoFuncoesGeracaoUnidadeGeradoraEmBaseMensalEntity expected,
        OnsIndicadoresDesempenhoFuncoesGeracaoUnidadeGeradoraEmBaseMensalEntity actual
    ) {
        assertOnsIndicadoresDesempenhoFuncoesGeracaoUnidadeGeradoraEmBaseMensalEntityUpdatableFieldsEquals(expected, actual);
        assertOnsIndicadoresDesempenhoFuncoesGeracaoUnidadeGeradoraEmBaseMensalEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsIndicadoresDesempenhoFuncoesGeracaoUnidadeGeradoraEmBaseMensalEntityAutoGeneratedPropertiesEquals(
        OnsIndicadoresDesempenhoFuncoesGeracaoUnidadeGeradoraEmBaseMensalEntity expected,
        OnsIndicadoresDesempenhoFuncoesGeracaoUnidadeGeradoraEmBaseMensalEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsIndicadoresDesempenhoFuncoesGeracaoUnidadeGeradoraEmBaseMensalEntity auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsIndicadoresDesempenhoFuncoesGeracaoUnidadeGeradoraEmBaseMensalEntityUpdatableFieldsEquals(
        OnsIndicadoresDesempenhoFuncoesGeracaoUnidadeGeradoraEmBaseMensalEntity expected,
        OnsIndicadoresDesempenhoFuncoesGeracaoUnidadeGeradoraEmBaseMensalEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsIndicadoresDesempenhoFuncoesGeracaoUnidadeGeradoraEmBaseMensalEntity relevant properties")
            .satisfies(a -> assertThat(a.getIdSubsistema()).as("check idSubsistema").isEqualTo(expected.getIdSubsistema()))
            .satisfies(a -> assertThat(a.getNomSubsistema()).as("check nomSubsistema").isEqualTo(expected.getNomSubsistema()))
            .satisfies(a -> assertThat(a.getIdEstado()).as("check idEstado").isEqualTo(expected.getIdEstado()))
            .satisfies(a -> assertThat(a.getNomEstado()).as("check nomEstado").isEqualTo(expected.getNomEstado()))
            .satisfies(a ->
                assertThat(a.getNomModalidadeoperacao()).as("check nomModalidadeoperacao").isEqualTo(expected.getNomModalidadeoperacao())
            )
            .satisfies(a ->
                assertThat(a.getNomAgenteproprietario()).as("check nomAgenteproprietario").isEqualTo(expected.getNomAgenteproprietario())
            )
            .satisfies(a -> assertThat(a.getIdTipousina()).as("check idTipousina").isEqualTo(expected.getIdTipousina()))
            .satisfies(a -> assertThat(a.getIdUsina()).as("check idUsina").isEqualTo(expected.getIdUsina()))
            .satisfies(a -> assertThat(a.getNomUsina()).as("check nomUsina").isEqualTo(expected.getNomUsina()))
            .satisfies(a -> assertThat(a.getCeg()).as("check ceg").isEqualTo(expected.getCeg()))
            .satisfies(a -> assertThat(a.getCodEquipamento()).as("check codEquipamento").isEqualTo(expected.getCodEquipamento()))
            .satisfies(a -> assertThat(a.getNumUnidadegeradora()).as("check numUnidadegeradora").isEqualTo(expected.getNumUnidadegeradora())
            )
            .satisfies(a -> assertThat(a.getNomUnidadegeradora()).as("check nomUnidadegeradora").isEqualTo(expected.getNomUnidadegeradora())
            )
            .satisfies(a -> assertThat(a.getValPotencia()).as("check valPotencia").isEqualTo(expected.getValPotencia()))
            .satisfies(a -> assertThat(a.getValDispf()).as("check valDispf").isEqualTo(expected.getValDispf()))
            .satisfies(a -> assertThat(a.getValIndisppf()).as("check valIndisppf").isEqualTo(expected.getValIndisppf()))
            .satisfies(a -> assertThat(a.getValIndispff()).as("check valIndispff").isEqualTo(expected.getValIndispff()))
            .satisfies(a -> assertThat(a.getValDmdff()).as("check valDmdff").isEqualTo(expected.getValDmdff()))
            .satisfies(a -> assertThat(a.getValFdff()).as("check valFdff").isEqualTo(expected.getValFdff()))
            .satisfies(a -> assertThat(a.getValTdff()).as("check valTdff").isEqualTo(expected.getValTdff()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsIndicadoresDesempenhoFuncoesGeracaoUnidadeGeradoraEmBaseMensalEntityUpdatableRelationshipsEquals(
        OnsIndicadoresDesempenhoFuncoesGeracaoUnidadeGeradoraEmBaseMensalEntity expected,
        OnsIndicadoresDesempenhoFuncoesGeracaoUnidadeGeradoraEmBaseMensalEntity actual
    ) {
        // empty method
    }
}
