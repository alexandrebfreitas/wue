package com.alexandrebfreitas.wue.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OnsImportacaoEnergiaNaModalidadeComercialBlocoEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsImportacaoEnergiaNaModalidadeComercialBlocoEntityAllPropertiesEquals(
        OnsImportacaoEnergiaNaModalidadeComercialBlocoEntity expected,
        OnsImportacaoEnergiaNaModalidadeComercialBlocoEntity actual
    ) {
        assertOnsImportacaoEnergiaNaModalidadeComercialBlocoEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertOnsImportacaoEnergiaNaModalidadeComercialBlocoEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsImportacaoEnergiaNaModalidadeComercialBlocoEntityAllUpdatablePropertiesEquals(
        OnsImportacaoEnergiaNaModalidadeComercialBlocoEntity expected,
        OnsImportacaoEnergiaNaModalidadeComercialBlocoEntity actual
    ) {
        assertOnsImportacaoEnergiaNaModalidadeComercialBlocoEntityUpdatableFieldsEquals(expected, actual);
        assertOnsImportacaoEnergiaNaModalidadeComercialBlocoEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsImportacaoEnergiaNaModalidadeComercialBlocoEntityAutoGeneratedPropertiesEquals(
        OnsImportacaoEnergiaNaModalidadeComercialBlocoEntity expected,
        OnsImportacaoEnergiaNaModalidadeComercialBlocoEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsImportacaoEnergiaNaModalidadeComercialBlocoEntity auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsImportacaoEnergiaNaModalidadeComercialBlocoEntityUpdatableFieldsEquals(
        OnsImportacaoEnergiaNaModalidadeComercialBlocoEntity expected,
        OnsImportacaoEnergiaNaModalidadeComercialBlocoEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsImportacaoEnergiaNaModalidadeComercialBlocoEntity relevant properties")
            .satisfies(a -> assertThat(a.getNomPais()).as("check nomPais").isEqualTo(expected.getNomPais()))
            .satisfies(a -> assertThat(a.getNomAgente()).as("check nomAgente").isEqualTo(expected.getNomAgente()))
            .satisfies(a -> assertThat(a.getNomBloco()).as("check nomBloco").isEqualTo(expected.getNomBloco()))
            .satisfies(a -> assertThat(a.getCodBloco()).as("check codBloco").isEqualTo(expected.getCodBloco()))
            .satisfies(a -> assertThat(a.getDinInstante()).as("check dinInstante").isEqualTo(expected.getDinInstante()))
            .satisfies(a ->
                assertThat(a.getValImportacaoprogramada())
                    .as("check valImportacaoprogramada")
                    .isEqualTo(expected.getValImportacaoprogramada())
            )
            .satisfies(a ->
                assertThat(a.getValImportacaodespachada())
                    .as("check valImportacaodespachada")
                    .isEqualTo(expected.getValImportacaodespachada())
            )
            .satisfies(a ->
                assertThat(a.getValImportacaoverificada())
                    .as("check valImportacaoverificada")
                    .isEqualTo(expected.getValImportacaoverificada())
            )
            .satisfies(a -> assertThat(a.getValPreco()).as("check valPreco").isEqualTo(expected.getValPreco()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsImportacaoEnergiaNaModalidadeComercialBlocoEntityUpdatableRelationshipsEquals(
        OnsImportacaoEnergiaNaModalidadeComercialBlocoEntity expected,
        OnsImportacaoEnergiaNaModalidadeComercialBlocoEntity actual
    ) {
        // empty method
    }
}
