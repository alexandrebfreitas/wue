package com.alexandrebfreitas.wue.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OnsCargaEnergiaDiariaEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsCargaEnergiaDiariaEntityAllPropertiesEquals(
        OnsCargaEnergiaDiariaEntity expected,
        OnsCargaEnergiaDiariaEntity actual
    ) {
        assertOnsCargaEnergiaDiariaEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertOnsCargaEnergiaDiariaEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsCargaEnergiaDiariaEntityAllUpdatablePropertiesEquals(
        OnsCargaEnergiaDiariaEntity expected,
        OnsCargaEnergiaDiariaEntity actual
    ) {
        assertOnsCargaEnergiaDiariaEntityUpdatableFieldsEquals(expected, actual);
        assertOnsCargaEnergiaDiariaEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsCargaEnergiaDiariaEntityAutoGeneratedPropertiesEquals(
        OnsCargaEnergiaDiariaEntity expected,
        OnsCargaEnergiaDiariaEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsCargaEnergiaDiariaEntity auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsCargaEnergiaDiariaEntityUpdatableFieldsEquals(
        OnsCargaEnergiaDiariaEntity expected,
        OnsCargaEnergiaDiariaEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsCargaEnergiaDiariaEntity relevant properties")
            .satisfies(a -> assertThat(a.getIdSubsistema()).as("check idSubsistema").isEqualTo(expected.getIdSubsistema()))
            .satisfies(a -> assertThat(a.getNomSubsistema()).as("check nomSubsistema").isEqualTo(expected.getNomSubsistema()))
            .satisfies(a -> assertThat(a.getDinInstante()).as("check dinInstante").isEqualTo(expected.getDinInstante()))
            .satisfies(a ->
                assertThat(a.getValCargaenergiamwmed()).as("check valCargaenergiamwmed").isEqualTo(expected.getValCargaenergiamwmed())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsCargaEnergiaDiariaEntityUpdatableRelationshipsEquals(
        OnsCargaEnergiaDiariaEntity expected,
        OnsCargaEnergiaDiariaEntity actual
    ) {
        // empty method
    }
}
