package com.alexandrebfreitas.wue.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OnsFatorCapacidadeGeracaoEolicaESolarEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsFatorCapacidadeGeracaoEolicaESolarEntityAllPropertiesEquals(
        OnsFatorCapacidadeGeracaoEolicaESolarEntity expected,
        OnsFatorCapacidadeGeracaoEolicaESolarEntity actual
    ) {
        assertOnsFatorCapacidadeGeracaoEolicaESolarEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertOnsFatorCapacidadeGeracaoEolicaESolarEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsFatorCapacidadeGeracaoEolicaESolarEntityAllUpdatablePropertiesEquals(
        OnsFatorCapacidadeGeracaoEolicaESolarEntity expected,
        OnsFatorCapacidadeGeracaoEolicaESolarEntity actual
    ) {
        assertOnsFatorCapacidadeGeracaoEolicaESolarEntityUpdatableFieldsEquals(expected, actual);
        assertOnsFatorCapacidadeGeracaoEolicaESolarEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsFatorCapacidadeGeracaoEolicaESolarEntityAutoGeneratedPropertiesEquals(
        OnsFatorCapacidadeGeracaoEolicaESolarEntity expected,
        OnsFatorCapacidadeGeracaoEolicaESolarEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsFatorCapacidadeGeracaoEolicaESolarEntity auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsFatorCapacidadeGeracaoEolicaESolarEntityUpdatableFieldsEquals(
        OnsFatorCapacidadeGeracaoEolicaESolarEntity expected,
        OnsFatorCapacidadeGeracaoEolicaESolarEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsFatorCapacidadeGeracaoEolicaESolarEntity relevant properties")
            .satisfies(a -> assertThat(a.getIdSubsistema()).as("check idSubsistema").isEqualTo(expected.getIdSubsistema()))
            .satisfies(a -> assertThat(a.getNomSubsistema()).as("check nomSubsistema").isEqualTo(expected.getNomSubsistema()))
            .satisfies(a -> assertThat(a.getIdEstado()).as("check idEstado").isEqualTo(expected.getIdEstado()))
            .satisfies(a -> assertThat(a.getNomEstado()).as("check nomEstado").isEqualTo(expected.getNomEstado()))
            .satisfies(a -> assertThat(a.getCodPontoconexao()).as("check codPontoconexao").isEqualTo(expected.getCodPontoconexao()))
            .satisfies(a -> assertThat(a.getNomPontoconexao()).as("check nomPontoconexao").isEqualTo(expected.getNomPontoconexao()))
            .satisfies(a -> assertThat(a.getNomLocalizacao()).as("check nomLocalizacao").isEqualTo(expected.getNomLocalizacao()))
            .satisfies(a ->
                assertThat(a.getValLatitudesecoletora()).as("check valLatitudesecoletora").isEqualTo(expected.getValLatitudesecoletora())
            )
            .satisfies(a ->
                assertThat(a.getValLongitudesecoletora()).as("check valLongitudesecoletora").isEqualTo(expected.getValLongitudesecoletora())
            )
            .satisfies(a ->
                assertThat(a.getValLatitudepontoconexao())
                    .as("check valLatitudepontoconexao")
                    .isEqualTo(expected.getValLatitudepontoconexao())
            )
            .satisfies(a ->
                assertThat(a.getValLongitudepontoconexao())
                    .as("check valLongitudepontoconexao")
                    .isEqualTo(expected.getValLongitudepontoconexao())
            )
            .satisfies(a ->
                assertThat(a.getNomModalidadeoperacao()).as("check nomModalidadeoperacao").isEqualTo(expected.getNomModalidadeoperacao())
            )
            .satisfies(a -> assertThat(a.getNomTipousina()).as("check nomTipousina").isEqualTo(expected.getNomTipousina()))
            .satisfies(a -> assertThat(a.getNomUsinaConjunto()).as("check nomUsinaConjunto").isEqualTo(expected.getNomUsinaConjunto()))
            .satisfies(a -> assertThat(a.getDinInstante()).as("check dinInstante").isEqualTo(expected.getDinInstante()))
            .satisfies(a -> assertThat(a.getIdOns()).as("check idOns").isEqualTo(expected.getIdOns()))
            .satisfies(a -> assertThat(a.getCeg()).as("check ceg").isEqualTo(expected.getCeg()))
            .satisfies(a ->
                assertThat(a.getValGeracaoprogramada()).as("check valGeracaoprogramada").isEqualTo(expected.getValGeracaoprogramada())
            )
            .satisfies(a ->
                assertThat(a.getValGeracaoverificada()).as("check valGeracaoverificada").isEqualTo(expected.getValGeracaoverificada())
            )
            .satisfies(a ->
                assertThat(a.getValCapacidadeinstalada()).as("check valCapacidadeinstalada").isEqualTo(expected.getValCapacidadeinstalada())
            )
            .satisfies(a -> assertThat(a.getValFatorcapacidade()).as("check valFatorcapacidade").isEqualTo(expected.getValFatorcapacidade())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsFatorCapacidadeGeracaoEolicaESolarEntityUpdatableRelationshipsEquals(
        OnsFatorCapacidadeGeracaoEolicaESolarEntity expected,
        OnsFatorCapacidadeGeracaoEolicaESolarEntity actual
    ) {
        // empty method
    }
}
