package com.alexandrebfreitas.wue.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OnsDadosDisponibilidadeUsinasEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosDisponibilidadeUsinasEntityAllPropertiesEquals(
        OnsDadosDisponibilidadeUsinasEntity expected,
        OnsDadosDisponibilidadeUsinasEntity actual
    ) {
        assertOnsDadosDisponibilidadeUsinasEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertOnsDadosDisponibilidadeUsinasEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosDisponibilidadeUsinasEntityAllUpdatablePropertiesEquals(
        OnsDadosDisponibilidadeUsinasEntity expected,
        OnsDadosDisponibilidadeUsinasEntity actual
    ) {
        assertOnsDadosDisponibilidadeUsinasEntityUpdatableFieldsEquals(expected, actual);
        assertOnsDadosDisponibilidadeUsinasEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosDisponibilidadeUsinasEntityAutoGeneratedPropertiesEquals(
        OnsDadosDisponibilidadeUsinasEntity expected,
        OnsDadosDisponibilidadeUsinasEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsDadosDisponibilidadeUsinasEntity auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosDisponibilidadeUsinasEntityUpdatableFieldsEquals(
        OnsDadosDisponibilidadeUsinasEntity expected,
        OnsDadosDisponibilidadeUsinasEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsDadosDisponibilidadeUsinasEntity relevant properties")
            .satisfies(a -> assertThat(a.getIdSubsistema()).as("check idSubsistema").isEqualTo(expected.getIdSubsistema()))
            .satisfies(a -> assertThat(a.getNomSubsistema()).as("check nomSubsistema").isEqualTo(expected.getNomSubsistema()))
            .satisfies(a -> assertThat(a.getIdEstado()).as("check idEstado").isEqualTo(expected.getIdEstado()))
            .satisfies(a -> assertThat(a.getNomEstado()).as("check nomEstado").isEqualTo(expected.getNomEstado()))
            .satisfies(a -> assertThat(a.getNomUsina()).as("check nomUsina").isEqualTo(expected.getNomUsina()))
            .satisfies(a -> assertThat(a.getIdTipousina()).as("check idTipousina").isEqualTo(expected.getIdTipousina()))
            .satisfies(a -> assertThat(a.getNomTipocombustivel()).as("check nomTipocombustivel").isEqualTo(expected.getNomTipocombustivel())
            )
            .satisfies(a -> assertThat(a.getIdOns()).as("check idOns").isEqualTo(expected.getIdOns()))
            .satisfies(a -> assertThat(a.getCeg()).as("check ceg").isEqualTo(expected.getCeg()))
            .satisfies(a -> assertThat(a.getDinInstante()).as("check dinInstante").isEqualTo(expected.getDinInstante()))
            .satisfies(a ->
                assertThat(a.getValPotenciainstalada()).as("check valPotenciainstalada").isEqualTo(expected.getValPotenciainstalada())
            )
            .satisfies(a -> assertThat(a.getValDispoperacional()).as("check valDispoperacional").isEqualTo(expected.getValDispoperacional())
            )
            .satisfies(a ->
                assertThat(a.getValDispsincronizada()).as("check valDispsincronizada").isEqualTo(expected.getValDispsincronizada())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosDisponibilidadeUsinasEntityUpdatableRelationshipsEquals(
        OnsDadosDisponibilidadeUsinasEntity expected,
        OnsDadosDisponibilidadeUsinasEntity actual
    ) {
        // empty method
    }
}
