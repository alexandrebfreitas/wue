package com.alexandrebfreitas.wue.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OnsDadosRestricaoOperacaoConstrainedoffUsinasFotovoltaicasDetalhamentoUsinasEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosRestricaoOperacaoConstrainedoffUsinasFotovoltaicasDetalhamentoUsinasEntityAllPropertiesEquals(
        OnsDadosRestricaoOperacaoConstrainedoffUsinasFotovoltaicasDetalhamentoUsinasEntity expected,
        OnsDadosRestricaoOperacaoConstrainedoffUsinasFotovoltaicasDetalhamentoUsinasEntity actual
    ) {
        assertOnsDadosRestricaoOperacaoConstrainedoffUsinasFotovoltaicasDetalhamentoUsinasEntityAutoGeneratedPropertiesEquals(
            expected,
            actual
        );
        assertOnsDadosRestricaoOperacaoConstrainedoffUsinasFotovoltaicasDetalhamentoUsinasEntityAllUpdatablePropertiesEquals(
            expected,
            actual
        );
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosRestricaoOperacaoConstrainedoffUsinasFotovoltaicasDetalhamentoUsinasEntityAllUpdatablePropertiesEquals(
        OnsDadosRestricaoOperacaoConstrainedoffUsinasFotovoltaicasDetalhamentoUsinasEntity expected,
        OnsDadosRestricaoOperacaoConstrainedoffUsinasFotovoltaicasDetalhamentoUsinasEntity actual
    ) {
        assertOnsDadosRestricaoOperacaoConstrainedoffUsinasFotovoltaicasDetalhamentoUsinasEntityUpdatableFieldsEquals(expected, actual);
        assertOnsDadosRestricaoOperacaoConstrainedoffUsinasFotovoltaicasDetalhamentoUsinasEntityUpdatableRelationshipsEquals(
            expected,
            actual
        );
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosRestricaoOperacaoConstrainedoffUsinasFotovoltaicasDetalhamentoUsinasEntityAutoGeneratedPropertiesEquals(
        OnsDadosRestricaoOperacaoConstrainedoffUsinasFotovoltaicasDetalhamentoUsinasEntity expected,
        OnsDadosRestricaoOperacaoConstrainedoffUsinasFotovoltaicasDetalhamentoUsinasEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsDadosRestricaoOperacaoConstrainedoffUsinasFotovoltaicasDetalhamentoUsinasEntity auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosRestricaoOperacaoConstrainedoffUsinasFotovoltaicasDetalhamentoUsinasEntityUpdatableFieldsEquals(
        OnsDadosRestricaoOperacaoConstrainedoffUsinasFotovoltaicasDetalhamentoUsinasEntity expected,
        OnsDadosRestricaoOperacaoConstrainedoffUsinasFotovoltaicasDetalhamentoUsinasEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsDadosRestricaoOperacaoConstrainedoffUsinasFotovoltaicasDetalhamentoUsinasEntity relevant properties")
            .satisfies(a -> assertThat(a.getIdSubsistema()).as("check idSubsistema").isEqualTo(expected.getIdSubsistema()))
            .satisfies(a ->
                assertThat(a.getNomModalidadeoperacao()).as("check nomModalidadeoperacao").isEqualTo(expected.getNomModalidadeoperacao())
            )
            .satisfies(a -> assertThat(a.getIdEstado()).as("check idEstado").isEqualTo(expected.getIdEstado()))
            .satisfies(a -> assertThat(a.getNomConjuntousina()).as("check nomConjuntousina").isEqualTo(expected.getNomConjuntousina()))
            .satisfies(a -> assertThat(a.getNomUsina()).as("check nomUsina").isEqualTo(expected.getNomUsina()))
            .satisfies(a -> assertThat(a.getDinInstante()).as("check dinInstante").isEqualTo(expected.getDinInstante()))
            .satisfies(a -> assertThat(a.getIdOns()).as("check idOns").isEqualTo(expected.getIdOns()))
            .satisfies(a -> assertThat(a.getCeg()).as("check ceg").isEqualTo(expected.getCeg()))
            .satisfies(a ->
                assertThat(a.getValIrradianciaverificado())
                    .as("check valIrradianciaverificado")
                    .isEqualTo(expected.getValIrradianciaverificado())
            )
            .satisfies(a ->
                assertThat(a.getFlgDadoirradianciainvalido())
                    .as("check flgDadoirradianciainvalido")
                    .isEqualTo(expected.getFlgDadoirradianciainvalido())
            )
            .satisfies(a -> assertThat(a.getValGeracaoestimada()).as("check valGeracaoestimada").isEqualTo(expected.getValGeracaoestimada())
            )
            .satisfies(a ->
                assertThat(a.getValGeracaoverificada()).as("check valGeracaoverificada").isEqualTo(expected.getValGeracaoverificada())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDadosRestricaoOperacaoConstrainedoffUsinasFotovoltaicasDetalhamentoUsinasEntityUpdatableRelationshipsEquals(
        OnsDadosRestricaoOperacaoConstrainedoffUsinasFotovoltaicasDetalhamentoUsinasEntity expected,
        OnsDadosRestricaoOperacaoConstrainedoffUsinasFotovoltaicasDetalhamentoUsinasEntity actual
    ) {
        // empty method
    }
}
