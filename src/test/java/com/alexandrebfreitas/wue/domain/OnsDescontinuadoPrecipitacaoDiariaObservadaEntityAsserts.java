package com.alexandrebfreitas.wue.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OnsDescontinuadoPrecipitacaoDiariaObservadaEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDescontinuadoPrecipitacaoDiariaObservadaEntityAllPropertiesEquals(
        OnsDescontinuadoPrecipitacaoDiariaObservadaEntity expected,
        OnsDescontinuadoPrecipitacaoDiariaObservadaEntity actual
    ) {
        assertOnsDescontinuadoPrecipitacaoDiariaObservadaEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertOnsDescontinuadoPrecipitacaoDiariaObservadaEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDescontinuadoPrecipitacaoDiariaObservadaEntityAllUpdatablePropertiesEquals(
        OnsDescontinuadoPrecipitacaoDiariaObservadaEntity expected,
        OnsDescontinuadoPrecipitacaoDiariaObservadaEntity actual
    ) {
        assertOnsDescontinuadoPrecipitacaoDiariaObservadaEntityUpdatableFieldsEquals(expected, actual);
        assertOnsDescontinuadoPrecipitacaoDiariaObservadaEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDescontinuadoPrecipitacaoDiariaObservadaEntityAutoGeneratedPropertiesEquals(
        OnsDescontinuadoPrecipitacaoDiariaObservadaEntity expected,
        OnsDescontinuadoPrecipitacaoDiariaObservadaEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsDescontinuadoPrecipitacaoDiariaObservadaEntity auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDescontinuadoPrecipitacaoDiariaObservadaEntityUpdatableFieldsEquals(
        OnsDescontinuadoPrecipitacaoDiariaObservadaEntity expected,
        OnsDescontinuadoPrecipitacaoDiariaObservadaEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsDescontinuadoPrecipitacaoDiariaObservadaEntity relevant properties")
            .satisfies(a -> assertThat(a.getCodEstacao()).as("check codEstacao").isEqualTo(expected.getCodEstacao()))
            .satisfies(a -> assertThat(a.getValLatitude()).as("check valLatitude").isEqualTo(expected.getValLatitude()))
            .satisfies(a -> assertThat(a.getValLongitude()).as("check valLongitude").isEqualTo(expected.getValLongitude()))
            .satisfies(a -> assertThat(a.getValMedida()).as("check valMedida").isEqualTo(expected.getValMedida()))
            .satisfies(a -> assertThat(a.getDatObservada()).as("check datObservada").isEqualTo(expected.getDatObservada()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsDescontinuadoPrecipitacaoDiariaObservadaEntityUpdatableRelationshipsEquals(
        OnsDescontinuadoPrecipitacaoDiariaObservadaEntity expected,
        OnsDescontinuadoPrecipitacaoDiariaObservadaEntity actual
    ) {
        // empty method
    }
}
