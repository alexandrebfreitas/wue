package com.alexandrebfreitas.wue.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OnsModalidadeOperacaoUsinasEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsModalidadeOperacaoUsinasEntityAllPropertiesEquals(
        OnsModalidadeOperacaoUsinasEntity expected,
        OnsModalidadeOperacaoUsinasEntity actual
    ) {
        assertOnsModalidadeOperacaoUsinasEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertOnsModalidadeOperacaoUsinasEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsModalidadeOperacaoUsinasEntityAllUpdatablePropertiesEquals(
        OnsModalidadeOperacaoUsinasEntity expected,
        OnsModalidadeOperacaoUsinasEntity actual
    ) {
        assertOnsModalidadeOperacaoUsinasEntityUpdatableFieldsEquals(expected, actual);
        assertOnsModalidadeOperacaoUsinasEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsModalidadeOperacaoUsinasEntityAutoGeneratedPropertiesEquals(
        OnsModalidadeOperacaoUsinasEntity expected,
        OnsModalidadeOperacaoUsinasEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsModalidadeOperacaoUsinasEntity auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsModalidadeOperacaoUsinasEntityUpdatableFieldsEquals(
        OnsModalidadeOperacaoUsinasEntity expected,
        OnsModalidadeOperacaoUsinasEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsModalidadeOperacaoUsinasEntity relevant properties")
            .satisfies(a -> assertThat(a.getNomUsina()).as("check nomUsina").isEqualTo(expected.getNomUsina()))
            .satisfies(a -> assertThat(a.getCeg()).as("check ceg").isEqualTo(expected.getCeg()))
            .satisfies(a ->
                assertThat(a.getNomModalidadeoperacao()).as("check nomModalidadeoperacao").isEqualTo(expected.getNomModalidadeoperacao())
            )
            .satisfies(a ->
                assertThat(a.getValPotenciaautorizada()).as("check valPotenciaautorizada").isEqualTo(expected.getValPotenciaautorizada())
            )
            .satisfies(a -> assertThat(a.getSglCentrooperacao()).as("check sglCentrooperacao").isEqualTo(expected.getSglCentrooperacao()))
            .satisfies(a -> assertThat(a.getNomPontoconexao()).as("check nomPontoconexao").isEqualTo(expected.getNomPontoconexao()))
            .satisfies(a -> assertThat(a.getIdEstado()).as("check idEstado").isEqualTo(expected.getIdEstado()))
            .satisfies(a -> assertThat(a.getNomEstado()).as("check nomEstado").isEqualTo(expected.getNomEstado()))
            .satisfies(a -> assertThat(a.getStsAneel()).as("check stsAneel").isEqualTo(expected.getStsAneel()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsModalidadeOperacaoUsinasEntityUpdatableRelationshipsEquals(
        OnsModalidadeOperacaoUsinasEntity expected,
        OnsModalidadeOperacaoUsinasEntity actual
    ) {
        // empty method
    }
}
