package com.alexandrebfreitas.wue.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OnsLinhasTransmissaoRedeOperacaoEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsLinhasTransmissaoRedeOperacaoEntityAllPropertiesEquals(
        OnsLinhasTransmissaoRedeOperacaoEntity expected,
        OnsLinhasTransmissaoRedeOperacaoEntity actual
    ) {
        assertOnsLinhasTransmissaoRedeOperacaoEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertOnsLinhasTransmissaoRedeOperacaoEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsLinhasTransmissaoRedeOperacaoEntityAllUpdatablePropertiesEquals(
        OnsLinhasTransmissaoRedeOperacaoEntity expected,
        OnsLinhasTransmissaoRedeOperacaoEntity actual
    ) {
        assertOnsLinhasTransmissaoRedeOperacaoEntityUpdatableFieldsEquals(expected, actual);
        assertOnsLinhasTransmissaoRedeOperacaoEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsLinhasTransmissaoRedeOperacaoEntityAutoGeneratedPropertiesEquals(
        OnsLinhasTransmissaoRedeOperacaoEntity expected,
        OnsLinhasTransmissaoRedeOperacaoEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsLinhasTransmissaoRedeOperacaoEntity auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsLinhasTransmissaoRedeOperacaoEntityUpdatableFieldsEquals(
        OnsLinhasTransmissaoRedeOperacaoEntity expected,
        OnsLinhasTransmissaoRedeOperacaoEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsLinhasTransmissaoRedeOperacaoEntity relevant properties")
            .satisfies(a ->
                assertThat(a.getIdSubsistemaTerminalde()).as("check idSubsistemaTerminalde").isEqualTo(expected.getIdSubsistemaTerminalde())
            )
            .satisfies(a ->
                assertThat(a.getNomSubsistemaTerminalde())
                    .as("check nomSubsistemaTerminalde")
                    .isEqualTo(expected.getNomSubsistemaTerminalde())
            )
            .satisfies(a ->
                assertThat(a.getIdSubsistemaTerminalpara())
                    .as("check idSubsistemaTerminalpara")
                    .isEqualTo(expected.getIdSubsistemaTerminalpara())
            )
            .satisfies(a ->
                assertThat(a.getNomSubsistemaTerminalpara())
                    .as("check nomSubsistemaTerminalpara")
                    .isEqualTo(expected.getNomSubsistemaTerminalpara())
            )
            .satisfies(a -> assertThat(a.getIdEstadoTerminalde()).as("check idEstadoTerminalde").isEqualTo(expected.getIdEstadoTerminalde())
            )
            .satisfies(a -> assertThat(a.getNomEstadoDe()).as("check nomEstadoDe").isEqualTo(expected.getNomEstadoDe()))
            .satisfies(a ->
                assertThat(a.getIdEstadoTerminalpara()).as("check idEstadoTerminalpara").isEqualTo(expected.getIdEstadoTerminalpara())
            )
            .satisfies(a -> assertThat(a.getNomEstadoPara()).as("check nomEstadoPara").isEqualTo(expected.getNomEstadoPara()))
            .satisfies(a -> assertThat(a.getNomSubestacaoDe()).as("check nomSubestacaoDe").isEqualTo(expected.getNomSubestacaoDe()))
            .satisfies(a -> assertThat(a.getNomSubestacaoPara()).as("check nomSubestacaoPara").isEqualTo(expected.getNomSubestacaoPara()))
            .satisfies(a -> assertThat(a.getValNiveltensaoKv()).as("check valNiveltensaoKv").isEqualTo(expected.getValNiveltensaoKv()))
            .satisfies(a -> assertThat(a.getNomTipoderede()).as("check nomTipoderede").isEqualTo(expected.getNomTipoderede()))
            .satisfies(a -> assertThat(a.getNomTipolinha()).as("check nomTipolinha").isEqualTo(expected.getNomTipolinha()))
            .satisfies(a ->
                assertThat(a.getNomAgenteproprietario()).as("check nomAgenteproprietario").isEqualTo(expected.getNomAgenteproprietario())
            )
            .satisfies(a ->
                assertThat(a.getNomLinhadetransmissao()).as("check nomLinhadetransmissao").isEqualTo(expected.getNomLinhadetransmissao())
            )
            .satisfies(a -> assertThat(a.getCodEquipamento()).as("check codEquipamento").isEqualTo(expected.getCodEquipamento()))
            .satisfies(a -> assertThat(a.getDatEntradaoperacao()).as("check datEntradaoperacao").isEqualTo(expected.getDatEntradaoperacao())
            )
            .satisfies(a -> assertThat(a.getDatDesativacao()).as("check datDesativacao").isEqualTo(expected.getDatDesativacao()))
            .satisfies(a -> assertThat(a.getDatPrevista()).as("check datPrevista").isEqualTo(expected.getDatPrevista()))
            .satisfies(a -> assertThat(a.getValComprimento()).as("check valComprimento").isEqualTo(expected.getValComprimento()))
            .satisfies(a -> assertThat(a.getValResistencia()).as("check valResistencia").isEqualTo(expected.getValResistencia()))
            .satisfies(a -> assertThat(a.getValReatancia()).as("check valReatancia").isEqualTo(expected.getValReatancia()))
            .satisfies(a -> assertThat(a.getValShunt()).as("check valShunt").isEqualTo(expected.getValShunt()))
            .satisfies(a ->
                assertThat(a.getValCapacoperlongasemlimit())
                    .as("check valCapacoperlongasemlimit")
                    .isEqualTo(expected.getValCapacoperlongasemlimit())
            )
            .satisfies(a ->
                assertThat(a.getValCapacoperlongacomlimit())
                    .as("check valCapacoperlongacomlimit")
                    .isEqualTo(expected.getValCapacoperlongacomlimit())
            )
            .satisfies(a ->
                assertThat(a.getValCapacopercurtasemlimit())
                    .as("check valCapacopercurtasemlimit")
                    .isEqualTo(expected.getValCapacopercurtasemlimit())
            )
            .satisfies(a ->
                assertThat(a.getValCapacopercurtacomlimit())
                    .as("check valCapacopercurtacomlimit")
                    .isEqualTo(expected.getValCapacopercurtacomlimit())
            )
            .satisfies(a ->
                assertThat(a.getValCapacidadeoperveraodialonga())
                    .as("check valCapacidadeoperveraodialonga")
                    .isEqualTo(expected.getValCapacidadeoperveraodialonga())
            )
            .satisfies(a ->
                assertThat(a.getValCapacoperinvernodialonga())
                    .as("check valCapacoperinvernodialonga")
                    .isEqualTo(expected.getValCapacoperinvernodialonga())
            )
            .satisfies(a ->
                assertThat(a.getValCapacoperinvernonoitelonga())
                    .as("check valCapacoperinvernonoitelonga")
                    .isEqualTo(expected.getValCapacoperinvernonoitelonga())
            )
            .satisfies(a ->
                assertThat(a.getValCapacoperveradiacurta())
                    .as("check valCapacoperveradiacurta")
                    .isEqualTo(expected.getValCapacoperveradiacurta())
            )
            .satisfies(a ->
                assertThat(a.getValCapacoperveraonoitecurta())
                    .as("check valCapacoperveraonoitecurta")
                    .isEqualTo(expected.getValCapacoperveraonoitecurta())
            )
            .satisfies(a ->
                assertThat(a.getValCapacoperinvernodiacurta())
                    .as("check valCapacoperinvernodiacurta")
                    .isEqualTo(expected.getValCapacoperinvernodiacurta())
            )
            .satisfies(a ->
                assertThat(a.getValCapacoperinvernonoitecurta())
                    .as("check valCapacoperinvernonoitecurta")
                    .isEqualTo(expected.getValCapacoperinvernonoitecurta())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsLinhasTransmissaoRedeOperacaoEntityUpdatableRelationshipsEquals(
        OnsLinhasTransmissaoRedeOperacaoEntity expected,
        OnsLinhasTransmissaoRedeOperacaoEntity actual
    ) {
        // empty method
    }
}
