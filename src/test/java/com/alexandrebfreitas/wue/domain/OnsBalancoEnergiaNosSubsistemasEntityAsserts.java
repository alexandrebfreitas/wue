package com.alexandrebfreitas.wue.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OnsBalancoEnergiaNosSubsistemasEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsBalancoEnergiaNosSubsistemasEntityAllPropertiesEquals(
        OnsBalancoEnergiaNosSubsistemasEntity expected,
        OnsBalancoEnergiaNosSubsistemasEntity actual
    ) {
        assertOnsBalancoEnergiaNosSubsistemasEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertOnsBalancoEnergiaNosSubsistemasEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsBalancoEnergiaNosSubsistemasEntityAllUpdatablePropertiesEquals(
        OnsBalancoEnergiaNosSubsistemasEntity expected,
        OnsBalancoEnergiaNosSubsistemasEntity actual
    ) {
        assertOnsBalancoEnergiaNosSubsistemasEntityUpdatableFieldsEquals(expected, actual);
        assertOnsBalancoEnergiaNosSubsistemasEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsBalancoEnergiaNosSubsistemasEntityAutoGeneratedPropertiesEquals(
        OnsBalancoEnergiaNosSubsistemasEntity expected,
        OnsBalancoEnergiaNosSubsistemasEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsBalancoEnergiaNosSubsistemasEntity auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsBalancoEnergiaNosSubsistemasEntityUpdatableFieldsEquals(
        OnsBalancoEnergiaNosSubsistemasEntity expected,
        OnsBalancoEnergiaNosSubsistemasEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsBalancoEnergiaNosSubsistemasEntity relevant properties")
            .satisfies(a -> assertThat(a.getIdSubsistema()).as("check idSubsistema").isEqualTo(expected.getIdSubsistema()))
            .satisfies(a -> assertThat(a.getNomSubsistema()).as("check nomSubsistema").isEqualTo(expected.getNomSubsistema()))
            .satisfies(a -> assertThat(a.getDinInstante()).as("check dinInstante").isEqualTo(expected.getDinInstante()))
            .satisfies(a -> assertThat(a.getValGerhidraulica()).as("check valGerhidraulica").isEqualTo(expected.getValGerhidraulica()))
            .satisfies(a -> assertThat(a.getValGertermica()).as("check valGertermica").isEqualTo(expected.getValGertermica()))
            .satisfies(a -> assertThat(a.getValGereolica()).as("check valGereolica").isEqualTo(expected.getValGereolica()))
            .satisfies(a -> assertThat(a.getValGersolar()).as("check valGersolar").isEqualTo(expected.getValGersolar()))
            .satisfies(a -> assertThat(a.getValCarga()).as("check valCarga").isEqualTo(expected.getValCarga()))
            .satisfies(a -> assertThat(a.getValIntercambio()).as("check valIntercambio").isEqualTo(expected.getValIntercambio()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsBalancoEnergiaNosSubsistemasEntityUpdatableRelationshipsEquals(
        OnsBalancoEnergiaNosSubsistemasEntity expected,
        OnsBalancoEnergiaNosSubsistemasEntity actual
    ) {
        // empty method
    }
}
