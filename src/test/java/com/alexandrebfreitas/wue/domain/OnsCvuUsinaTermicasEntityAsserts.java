package com.alexandrebfreitas.wue.domain;

import static com.alexandrebfreitas.wue.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class OnsCvuUsinaTermicasEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsCvuUsinaTermicasEntityAllPropertiesEquals(
        OnsCvuUsinaTermicasEntity expected,
        OnsCvuUsinaTermicasEntity actual
    ) {
        assertOnsCvuUsinaTermicasEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertOnsCvuUsinaTermicasEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsCvuUsinaTermicasEntityAllUpdatablePropertiesEquals(
        OnsCvuUsinaTermicasEntity expected,
        OnsCvuUsinaTermicasEntity actual
    ) {
        assertOnsCvuUsinaTermicasEntityUpdatableFieldsEquals(expected, actual);
        assertOnsCvuUsinaTermicasEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsCvuUsinaTermicasEntityAutoGeneratedPropertiesEquals(
        OnsCvuUsinaTermicasEntity expected,
        OnsCvuUsinaTermicasEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsCvuUsinaTermicasEntity auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsCvuUsinaTermicasEntityUpdatableFieldsEquals(
        OnsCvuUsinaTermicasEntity expected,
        OnsCvuUsinaTermicasEntity actual
    ) {
        assertThat(actual)
            .as("Verify OnsCvuUsinaTermicasEntity relevant properties")
            .satisfies(a -> assertThat(a.getDatIniciosemana()).as("check datIniciosemana").isEqualTo(expected.getDatIniciosemana()))
            .satisfies(a -> assertThat(a.getDatFimsemana()).as("check datFimsemana").isEqualTo(expected.getDatFimsemana()))
            .satisfies(a -> assertThat(a.getAnoReferencia()).as("check anoReferencia").isEqualTo(expected.getAnoReferencia()))
            .satisfies(a -> assertThat(a.getMesReferencia()).as("check mesReferencia").isEqualTo(expected.getMesReferencia()))
            .satisfies(a -> assertThat(a.getNumRevisao()).as("check numRevisao").isEqualTo(expected.getNumRevisao()))
            .satisfies(a -> assertThat(a.getNomSemanaoperativa()).as("check nomSemanaoperativa").isEqualTo(expected.getNomSemanaoperativa())
            )
            .satisfies(a -> assertThat(a.getCodModelos()).as("check codModelos").isEqualTo(expected.getCodModelos()))
            .satisfies(a -> assertThat(a.getIdSubsistema()).as("check idSubsistema").isEqualTo(expected.getIdSubsistema()))
            .satisfies(a -> assertThat(a.getNomSubsistema()).as("check nomSubsistema").isEqualTo(expected.getNomSubsistema()))
            .satisfies(a -> assertThat(a.getNomUsina()).as("check nomUsina").isEqualTo(expected.getNomUsina()))
            .satisfies(a ->
                assertThat(a.getValCvu()).as("check valCvu").usingComparator(bigDecimalCompareTo).isEqualTo(expected.getValCvu())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnsCvuUsinaTermicasEntityUpdatableRelationshipsEquals(
        OnsCvuUsinaTermicasEntity expected,
        OnsCvuUsinaTermicasEntity actual
    ) {
        // empty method
    }
}
